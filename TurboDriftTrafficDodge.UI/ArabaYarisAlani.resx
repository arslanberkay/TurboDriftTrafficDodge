<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tmrHareket.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="imglMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>152, 17</value>
  </metadata>
  <data name="imglMenu.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAKgkAAAJNU0Z0AUkBTAMBAQAB
        EAEAARABAAEeAQABHgEABP8BIQEACP8BQgFNATYHAAE2AwABKAMAAXgDAAEeAwABAQEAASAFAAFAATj/
        AP8A/wD/AP8A/wD/AP8A/wB/AAMQARUDHQEpAyEBLwMjATMDIwEzAyMBMwMjATMDIwEzAyMBMwMjATMD
        IwEzAyMBMwMjATMDIwEzAyMBMwMjATMDIwEzAyMBMwMjATMDIwEzAyMBMwMjATMDIwEzAyMBMwMhAS8D
        HgEqAxIBGAMCAQP/AHEAAzEBTgNIAZUDRgGrAz4BuwM+AbsDPgG7Az4BuwM+AbsDPgG7Az4BuwM+AbsD
        PgG7Az4BuwM+AbsDPgG7Az4BuwM+AbsDPgG7Az4BuwM+AbsDPgG7Az4BuwM+AbsDPgG7A0QBrgNIAZgD
        NgFYAwgBCv8AcQADPQFrA0MBzAMnAekDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DIQHtA0IBzwNCAXgD
        CgEN/wBxAAM9AWsDQwHMAycB6QMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMhAe0DQgHPA0IBeAMKAQ3/
        AHEAAy4BRwNGAYgDRwGbA0MBqgNDAaoDQwGqA0MBqgNDAaoDQwGqA0MBqgNDAaoDQwGqA0MBqgNDAaoD
        QwGqA0MBqgNDAaoDQwGqA0MBqgNDAaoDQwGqA0MBqgNDAaoDQwGqA0YBngNGAYoDMgFQAwcBCf8AcQAD
        CwEOAxQBGwMXAR8DGQEiAxkBIgMZASIDGQEiAxkBIgMZASIDGQEiAxkBIgMZASIDGQEiAxkBIgMZASID
        GQEiAxkBIgMZASIDGQEiAxkBIgMZASIDGQEiAxkBIgMZASIDGAEgAxUBHAMMARAEAv8A/wD/AP8A/wA1
        AAMjATIDOQFfAz4BbQNAAXcDQAF3A0ABdwNAAXcDQAF3A0ABdwNAAXcDQAF3A0ABdwNAAXcDQAF3A0AB
        dwNAAXcDQAF3A0ABdwNAAXcDQAF3A0ABdwNAAXcDQAF3A0ABdwM+AW4DOgFhAyYBOAMFAQb/AHEAAz0B
        awNDAcwDJwHpAwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AyEB7QNCAc8DQgF4AwoBDf8AcQADPQFrA0MB
        zAMnAekDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DIQHtA0IBzwNCAXgDCgEN/wBxAAM7AWQDSAG+AzMB
        2QMXAe4DFwHuAxcB7gMXAe4DFwHuAxcB7gMXAe4DFwHuAxcB7gMXAe4DFwHuAxcB7gMXAe4DFwHuAxcB
        7gMXAe4DFwHuAxcB7gMXAe4DFwHuAxcB7gMwAd0DRgHBAz8BcAMJAQz/AHEAAx4BKwMzAVEDNwFdAzsB
        ZgM7AWYDOwFmAzsBZgM7AWYDOwFmAzsBZgM7AWYDOwFmAzsBZgM7AWYDOwFmAzsBZgM7AWYDOwFmAzsB
        ZgM7AWYDOwFmAzsBZgM7AWYDOwFmAzgBXwMzAVMDIQEwAwQBBf8A/wD/AP8A/wA1AAMQARUDHQEpAyEB
        LwMjATMDIwEzAyMBMwMjATMDIwEzAyMBMwMjATMDIwEzAyMBMwMjATMDIwEzAyMBMwMjATMDIwEzAyMB
        MwMjATMDIwEzAyMBMwMjATMDIwEzAyMBMwMhAS8DHgEqAxIBGAMCAQP/AHEAAzEBTgNIAZUDRgGrAz4B
        uwM+AbsDPgG7Az4BuwM+AbsDPgG7Az4BuwM+AbsDPgG7Az4BuwM+AbsDPgG7Az4BuwM+AbsDPgG7Az4B
        uwM+AbsDPgG7Az4BuwM+AbsDPgG7A0QBrgNIAZgDNgFYAwgBCv8AcQADPQFrA0MBzAMnAekDAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DIQHtA0IBzwNCAXgDCgEN/wBxAAM9AWsDQwHMAycB6QMAAf8DAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DAAH/AwAB/wMhAe0DQgHPA0IBeAMKAQ3/AHEAAy4BRwNGAYgDRwGbA0MBqgNDAaoDQwGqA0MB
        qgNDAaoDQwGqA0MBqgNDAaoDQwGqA0MBqgNDAaoDQwGqA0MBqgNDAaoDQwGqA0MBqgNDAaoDQwGqA0MB
        qgNDAaoDQwGqA0YBngNGAYoDMgFQAwcBCf8AcQADCwEOAxQBGwMXAR8DGQEiAxkBIgMZASIDGQEiAxkB
        IgMZASIDGQEiAxkBIgMZASIDGQEiAxkBIgMZASIDGQEiAxkBIgMZASIDGQEiAxkBIgMZASIDGQEiAxkB
        IgMZASIDGAEgAxUBHAMMARAEAv8A/wD/AP8A/wD/AP8A/wD0AAFCAU0BPgcAAT4DAAEoAwABeAMAAR4D
        AAEBAQABAQUAAeABARYAA/8BAAP/AfwMAAP/AfwMAAP/AfwMAAP/AfwMAAP/AfwMAAGAAgABBAwAAYAC
        AAEEDAABgAIAAQQMAAGAAgABBAwAAYACAAEEDAABgAIAAQQMAAP/AfwMAAP/AfwMAAGAAgABBAwAAYAC
        AAEEDAABgAIAAQQMAAGAAgABBAwAAYACAAEEDAAD/wH8DAAD/wH8DAABgAIAAQQMAAGAAgABBAwAAYAC
        AAEEDAABgAIAAQQMAAGAAgABBAwAAYACAAEEDAAD/wH8DAAD/wH8DAAD/wH8DAAD/wH8DAAL
</value>
  </data>
</root>